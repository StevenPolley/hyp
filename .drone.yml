kind: pipeline
name: default

workspace:
  base: /go
  path: src/deadbeef.codes/steven/hyp

steps:

- name: create build environment
  image: plugins/docker
  settings:
    repo: registry.deadbeef.codes/hyp-build
  when:
    target:
      include:
      - environment


- name: build hyp (client) linux-amd64
  image: registry.deadbeef.codes/hyp-build:latest
  pull: always
  volumes:
  - name: publicrelease
    path: /dist
  environment:
    GOOS: linux
    GOARCH: amd64
    CGO_ENABLED: 0
  commands:
  - . /root/.profile
  - cd hyp
  - go build .
  - mv -f hyp /dist
  - cd ../hypd/server
  - go generate
  - cd ..
  - go build .
  - mv -f hypd /dist


- name: build hypd (server) linux-amd64
  image: registry.deadbeef.codes/hyp-build:latest
  pull: always
  volumes:
  - name: publicrelease
    path: /dist
  environment:
    GOOS: linux
    GOARCH: amd64
    CGO_ENABLED: 0
  commands:
  - . /root/.profile
  - cd hypd/server
  - go generate
  - cd ..
  - go build .
  - mv -f hypd /dist


- name: build hyp (client) windows-amd64
  image: registry.deadbeef.codes/hyp-build:latest
  pull: always
  volumes:
  - name: publicrelease
    path: /dist
  environment:
    GOOS: windows
    GOARCH: amd64
    CGO_ENABLED: 0
  commands:
  - . /root/.profile
  - cd hyp
  - go build .
  - mv -f hyp.exe /dist
 
  

- name: release
  image: plugins/gitea-release
  pull: always
  volumes:
  - name: publicrelease
    path: /dist
  settings:
    api_key: 
      from_secret: drone_token
    base_url: https://deadbeef.codes
    files: dist/*
  when:
    target:
      include:
      - release

volumes:
- name: publicrelease
  host:
    path: /data/public/build

